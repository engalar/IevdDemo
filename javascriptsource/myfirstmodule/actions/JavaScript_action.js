// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
async function injectDeps(deps) {
	return await new Promise((resolve, reject) => {
		if (!Array.isArray(deps)) {
			deps = [deps];
		}
		window.dojoDynamicRequire(deps, function() { resolve(Array.from(arguments)) });
	});
}
function onDestroy(containerId, cb) {
	var myWidget = dojo.dijit.registry.byId(containerId);

	myWidget.addOnDestroy(cb);
}

function main(Konva, containerId) {
	// 创建舞台
	const stage = new Konva.Stage({
		container: containerId,
		width: 578,
		height: 251
	});

	// 加载背景图片
	const imageObj = new Image();
	imageObj.onload = function() {
		// 添加背景层
		const layer = new Konva.Layer();

		// 创建图像
		const image = new Konva.Image({
			x: 0,
			y: 0,
			image: imageObj,
			width: stage.width(),
			height: stage.height()
		});

		// 创建矩形
		const rect = new Konva.Rect({
			x: 20,
			y: 20,
			width: 100,
			height: 50,
			fill: "rgb(180, 178, 255)"
		});

		// 创建文本
		const text = new Konva.Text({
			x: 10,
			y: 10,
			text: "50",
			fontSize: 20,
			fontFamily: "Arial",
			fill: "white"
		});

		// 添加到层
		layer.add(image);
		layer.add(rect);
		layer.add(text);

		// 添加到舞台
		stage.add(layer);

		// 模拟水位变化
		let height = 50;
		setInterval(() => {
			rect.height(height);
			text.text(height);
			layer.draw();
			height = height + 5 > 100 ? 50 : height + 5;
		}, 1000);
	};

	imageObj.src = "https://konvajs.org/assets/planets.png";
}
// END EXTRA CODE

/**
 * @param {string} containerId
 * @returns {Promise.<void>}
 */
export async function JavaScript_action(containerId) {
	// BEGIN USER CODE
	const container = document.querySelector('#' + containerId);
	let lang = mx.session.sessionData.locale.code.split('_')[0];

	const [Konva] = await injectDeps('https://unpkg.com/konva@8.4.3/konva.min.js')
	main(Konva, containerId);

	const socket = new WebSocket(mx.appUrl.replace('http', 'ws') + 'ws');

	socket.onopen = () => {
		console.log('Connected to server');
	};

	socket.onmessage = (event) => {
		console.log(event.data);
	};

	socket.onclose = () => {
		console.log('Disconnected from server');
	};

	onDestroy(containerId, () => {
		//dispose
		socket.close();
	});
	// END USER CODE
}
